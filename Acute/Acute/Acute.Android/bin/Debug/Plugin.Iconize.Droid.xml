<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Plugin.Iconize.Droid</name>
    </assembly>
    <members>
        <member name="T:Plugin.Iconize.Droid.Controls.IconDrawable">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.Droid.Controls.IconDrawable" /> drawable.
            </summary>
            <seealso cref="T:Android.Graphics.Drawables.Drawable" />
        </member>
        <member name="F:Plugin.Iconize.Droid.Controls.IconDrawable.ANDROID_ACTIONBAR_ICON_SIZE_DP">
            <summary>
            The android actionbar icon size dp
            </summary>
        </member>
        <member name="P:Plugin.Iconize.Droid.Controls.IconDrawable.IntrinsicHeight">
            <summary>
            Return the intrinsic height of the underlying drawable object.
            </summary>
            <value>
            To be added.
            </value>
            <remarks>
            <para tool="javadoc-to-mdoc">Return the intrinsic height of the underlying drawable object. Returns
            -1 if it has no intrinsic height, such as with a solid color.
            </para>
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getIntrinsicHeight()" target="_blank">[Android Documentation]</a>
              </format>
            </para>
            </remarks>
            <since version="Added in API level 1" />
        </member>
        <member name="P:Plugin.Iconize.Droid.Controls.IconDrawable.IntrinsicWidth">
            <summary>
            Return the intrinsic width of the underlying drawable object.
            </summary>
            <value>
            To be added.
            </value>
            <remarks>
            <para tool="javadoc-to-mdoc">Return the intrinsic width of the underlying drawable object.  Returns
            -1 if it has no intrinsic width, such as with a solid color.
            </para>
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getIntrinsicWidth()" target="_blank">[Android Documentation]</a>
              </format>
            </para>
            </remarks>
            <since version="Added in API level 1" />
        </member>
        <member name="P:Plugin.Iconize.Droid.Controls.IconDrawable.IsStateful">
            <summary>
            Indicates whether this view will change its appearance based on state.
            </summary>
            <value>
            To be added.
            </value>
            <remarks>
            <para tool="javadoc-to-mdoc">Indicates whether this view will change its appearance based on state.
            Clients can use this to determine whether it is necessary to calculate
            their state and call setState.</para>
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#isStateful()" target="_blank">[Android Documentation]</a>
              </format>
            </para>
            </remarks>
            <since version="Added in API level 1" />
            <altmember cref="M:Android.Graphics.Drawables.Drawable.SetState(System.Int32[])" />
        </member>
        <member name="P:Plugin.Iconize.Droid.Controls.IconDrawable.Opacity">
            <summary>
            Return the opacity/transparency of this Drawable.
            </summary>
            <value>
            To be added.
            </value>
            <remarks>
            <para tool="javadoc-to-mdoc">Return the opacity/transparency of this Drawable.  The returned value is
            one of the abstract format constants in
            <c><see cref="T:Android.Graphics.PixelFormat" /></c>:
            <c><see cref="F:Android.Graphics.Format.Unknown" /></c>,
            <c><see cref="F:Android.Graphics.Format.Translucent" /></c>,
            <c><see cref="F:Android.Graphics.Format.Transparent" /></c>, or
            <c><see cref="F:Android.Graphics.Format.Opaque" /></c>.
            </para>
            <para tool="javadoc-to-mdoc">Generally a Drawable should be as conservative as possible with the
            value it returns.  For example, if it contains multiple child drawables
            and only shows one of them at a time, if only one of the children is
            TRANSLUCENT and the others are OPAQUE then TRANSLUCENT should be
            returned.  You can use the method <c><see cref="M:Android.Graphics.Drawables.Drawable.ResolveOpacity(System.Int32, System.Int32)" /></c> to perform a
            standard reduction of two opacities to the appropriate single output.
            </para>
            <para tool="javadoc-to-mdoc">Note that the returned value does <i>not</i> take into account a
            custom alpha or color filter that has been applied by the client through
            the <c><see cref="M:Android.Graphics.Drawables.Drawable.SetAlpha(System.Int32)" /></c> or <c><see cref="M:Android.Graphics.Drawables.Drawable.SetColorFilter(Android.Graphics.ColorFilter)" /></c> methods.</para>
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#getOpacity()" target="_blank">[Android Documentation]</a>
              </format>
            </para>
            </remarks>
            <since version="Added in API level 1" />
            <altmember cref="T:Android.Graphics.PixelFormat" />
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.#ctor(Android.Content.Context,System.String)">
            <summary>
            Create an <see cref="T:Plugin.Iconize.Droid.Controls.IconDrawable" />.
            </summary>
            <param name="context">Your activity or application context.</param>
            <param name="iconKey">The icon key you want this drawable to display.</param>
            <exception cref="T:System.ArgumentException">If the key doesn't match any icon.</exception>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.#ctor(Android.Content.Context,Plugin.Iconize.IIcon)">
            <summary>
            Create an <see cref="T:Plugin.Iconize.Droid.Controls.IconDrawable" />.
            </summary>
            <param name="context">Your activity or application context.</param>
            <param name="icon">The icon you want this drawable to display.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.Init(Android.Content.Context,Plugin.Iconize.IIcon)">
            <summary>
            Initializes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="icon">The icon.</param>
            <exception cref="T:Java.Lang.IllegalStateException">Unable to find the module associated  +
                                    with icon  + icon.Key + , have you registered the module  +
                                    you are trying to use with Iconize.With(...) in your Application?</exception>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.ActionBarSize">
            <summary>
            Set the size of this icon to the standard Android ActionBar.
            </summary>
            <returns>The current IconDrawable for chaining.</returns>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.SizeRes(System.Int32)">
            <summary>
            Set the size of the drawable.
            </summary>
            <param name="dimenRes">The dimension resource.</param>
            <returns>The current IconDrawable for chaining.</returns>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.SizeDp(System.Int32)">
            <summary>
            Set the size of the drawable.
            </summary>
            <param name="size">The size in density-independent pixels (dp).</param>
            <returns>The current IconDrawable for chaining.</returns>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.SizePx(System.Int32)">
            <summary>
            Set the size of the drawable.
            </summary>
            <param name="size">The size in pixels (px).</param>
            <returns>The current IconDrawable for chaining.</returns>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.Color(System.Int32)">
            <summary>
            Set the color of the drawable.
            </summary>
            <param name="color">The color, usually from android.graphics.Color or 0xFF012345.</param>
            <returns>The current IconDrawable for chaining.</returns>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.ColorRes(System.Int32)">
            <summary>
            Set the color of the drawable.
            </summary>
            <param name="colorRes">The color resource, from your R file.</param>
            <returns>The current IconDrawable for chaining.</returns>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.Alpha(System.Int32)">
            <summary>
            Set the alpha of this drawable.
            </summary>
            <param name="alpha">The alpha, between 0 (transparent) and 255 (opaque).</param>
            <returns>The current IconDrawable for chaining.</returns>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.Draw(Android.Graphics.Canvas)">
            <summary>
            Draws the specified canvas.
            </summary>
            <param name="canvas">The canvas.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.SetState(System.Int32[])">
            <summary>
            Sets the state.
            </summary>
            <param name="stateSet">The state set.</param>
            <returns></returns>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.SetAlpha(System.Int32)">
            <summary>
            Sets the alpha.
            </summary>
            <param name="alpha">The alpha.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.SetColorFilter(Android.Graphics.ColorFilter)">
            <summary>
            Sets the color filter.
            </summary>
            <param name="colorFilter">The color filter.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.ClearColorFilter">
            <summary>
            </summary>
            <remarks>
            <para tool="javadoc-to-mdoc" />
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/graphics/drawable/Drawable.html#clearColorFilter()" target="_blank">[Android Documentation]</a>
              </format>
            </para>
            </remarks>
            <since version="Added in API level 1" />
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.SetStyle(Android.Graphics.Paint.Style)">
            <summary>
            Sets paint style.
            </summary>
            <param name="style">The style to be applied.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.IsEnabled(System.Int32[])">
            <summary>
            Determines whether the specified state set is enabled.
            </summary>
            <param name="stateSet">The state set.</param>
            <returns></returns>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconDrawable.ConvertDpToPx(Android.Content.Context,System.Single)">
            <summary>
            Converts the dp to px.
            </summary>
            <param name="context">The context.</param>
            <param name="dp">The dp.</param>
            <returns></returns>
        </member>
        <member name="T:Plugin.Iconize.Droid.Controls.IconToggleButton">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.Droid.Controls.IconToggleButton" /> control.
            </summary>
            <seealso cref="T:Android.Widget.ToggleButton" />
            <seealso cref="T:Plugin.Iconize.Droid.IHasOnViewAttachListener" />
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconToggleButton.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Droid.Controls.IconToggleButton"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconToggleButton.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Droid.Controls.IconToggleButton"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="attrs">The attrs.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconToggleButton.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Droid.Controls.IconToggleButton"/> class.
            </summary>
            <param name="javaReference">The java reference.</param>
            <param name="transfer">The transfer.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconToggleButton.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Droid.Controls.IconToggleButton"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="attrs">The attrs.</param>
            <param name="defStyleAttr">The definition style attribute.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconToggleButton.SetText(Java.Lang.ICharSequence,Android.Widget.TextView.BufferType)">
            <summary>
            Sets the text.
            </summary>
            <param name="text">The text.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconToggleButton.SetOnViewAttachListener(Plugin.Iconize.Droid.IOnViewAttachListener)">
            <summary>
            Sets the on view attach listener.
            </summary>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconToggleButton.OnAttachedToWindow">
            <summary>
            This is called when the view is attached to a window.
            </summary>
            <remarks>
            <para tool="javadoc-to-mdoc">This is called when the view is attached to a window.  At this point it
            has a Surface and will start drawing.  Note that this function is
            guaranteed to be called before <c><see cref="M:Android.Views.View.OnDraw(Android.Graphics.Canvas)" /></c>,
            however it may be called any time before the first onDraw -- including
            before or after <c><see cref="M:Android.Views.View.OnMeasure(System.Int32, System.Int32)" /></c>.</para>
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/view/View.html#onAttachedToWindow()" target="_blank">[Android Documentation]</a>
              </format>
            </para>
            </remarks>
            <since version="Added in API level 1" />
            <altmember cref="M:Android.Views.View.OnDetachedFromWindow" />
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconToggleButton.OnDetachedFromWindow">
            <summary>
            This is called when the view is detached from a window.
            </summary>
            <remarks>
            <para tool="javadoc-to-mdoc">This is called when the view is detached from a window.  At this point it
            no longer has a surface for drawing.</para>
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/view/View.html#onDetachedFromWindow()" target="_blank">[Android Documentation]</a>
              </format>
            </para>
            </remarks>
            <since version="Added in API level 1" />
            <altmember cref="M:Android.Views.View.OnAttachedToWindow" />
        </member>
        <member name="T:Plugin.Iconize.Droid.Controls.IconTextView">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.Droid.Controls.IconTextView" /> control.
            </summary>
            <seealso cref="T:Android.Widget.TextView" />
            <seealso cref="T:Plugin.Iconize.Droid.IHasOnViewAttachListener" />
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconTextView.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Droid.Controls.IconTextView"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconTextView.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Droid.Controls.IconTextView"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="attrs">The attrs.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconTextView.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Droid.Controls.IconTextView"/> class.
            </summary>
            <param name="javaReference">The java reference.</param>
            <param name="transfer">The transfer.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconTextView.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Droid.Controls.IconTextView"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="attrs">The attrs.</param>
            <param name="defStyleAttr">The definition style attribute.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconTextView.SetText(Java.Lang.ICharSequence,Android.Widget.TextView.BufferType)">
            <summary>
            Sets the text.
            </summary>
            <param name="text">The text.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconTextView.SetOnViewAttachListener(Plugin.Iconize.Droid.IOnViewAttachListener)">
            <summary>
            Sets the on view attach listener.
            </summary>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconTextView.OnAttachedToWindow">
            <summary>
            This is called when the view is attached to a window.
            </summary>
            <remarks>
            <para tool="javadoc-to-mdoc">This is called when the view is attached to a window.  At this point it
            has a Surface and will start drawing.  Note that this function is
            guaranteed to be called before <c><see cref="M:Android.Views.View.OnDraw(Android.Graphics.Canvas)" /></c>,
            however it may be called any time before the first onDraw -- including
            before or after <c><see cref="M:Android.Views.View.OnMeasure(System.Int32, System.Int32)" /></c>.</para>
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/view/View.html#onAttachedToWindow()" target="_blank">[Android Documentation]</a>
              </format>
            </para>
            </remarks>
            <since version="Added in API level 1" />
            <altmember cref="M:Android.Views.View.OnDetachedFromWindow" />
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconTextView.OnDetachedFromWindow">
            <summary>
            This is called when the view is detached from a window.
            </summary>
            <remarks>
            <para tool="javadoc-to-mdoc">This is called when the view is detached from a window.  At this point it
            no longer has a surface for drawing.</para>
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/view/View.html#onDetachedFromWindow()" target="_blank">[Android Documentation]</a>
              </format>
            </para>
            </remarks>
            <since version="Added in API level 1" />
            <altmember cref="M:Android.Views.View.OnAttachedToWindow" />
        </member>
        <member name="T:Plugin.Iconize.Droid.Controls.IconButton">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.Droid.Controls.IconButton" /> control.
            </summary>
            <seealso cref="T:Android.Support.V7.Widget.AppCompatButton" />
            <seealso cref="T:Plugin.Iconize.Droid.IHasOnViewAttachListener" />
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconButton.#ctor(Android.Content.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Droid.Controls.IconButton"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconButton.#ctor(Android.Content.Context,Android.Util.IAttributeSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Droid.Controls.IconButton"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="attrs">The attrs.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconButton.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Droid.Controls.IconButton"/> class.
            </summary>
            <param name="javaReference">The java reference.</param>
            <param name="transfer">The transfer.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconButton.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Droid.Controls.IconButton"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="attrs">The attrs.</param>
            <param name="defStyleAttr">The definition style attribute.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconButton.SetText(Java.Lang.ICharSequence,Android.Widget.TextView.BufferType)">
            <summary>
            Sets the text.
            </summary>
            <param name="text">The text.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconButton.SetOnViewAttachListener(Plugin.Iconize.Droid.IOnViewAttachListener)">
            <summary>
            Sets the on view attach listener.
            </summary>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconButton.OnAttachedToWindow">
            <summary>
            This is called when the view is attached to a window.
            </summary>
            <remarks>
            <para tool="javadoc-to-mdoc">This is called when the view is attached to a window.  At this point it
            has a Surface and will start drawing.  Note that this function is
            guaranteed to be called before <c><see cref="M:Android.Views.View.OnDraw(Android.Graphics.Canvas)" /></c>,
            however it may be called any time before the first onDraw -- including
            before or after <c><see cref="M:Android.Views.View.OnMeasure(System.Int32, System.Int32)" /></c>.</para>
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/view/View.html#onAttachedToWindow()" target="_blank">[Android Documentation]</a>
              </format>
            </para>
            </remarks>
            <since version="Added in API level 1" />
            <altmember cref="M:Android.Views.View.OnDetachedFromWindow" />
        </member>
        <member name="M:Plugin.Iconize.Droid.Controls.IconButton.OnDetachedFromWindow">
            <summary>
            This is called when the view is detached from a window.
            </summary>
            <remarks>
            <para tool="javadoc-to-mdoc">This is called when the view is detached from a window.  At this point it
            no longer has a surface for drawing.</para>
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/view/View.html#onDetachedFromWindow()" target="_blank">[Android Documentation]</a>
              </format>
            </para>
            </remarks>
            <since version="Added in API level 1" />
            <altmember cref="M:Android.Views.View.OnAttachedToWindow" />
        </member>
        <member name="T:Plugin.Iconize.Droid.IconizeExtensions">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.Droid.IconizeExtensions" /> extensions.
            </summary>
        </member>
        <member name="M:Plugin.Iconize.Droid.IconizeExtensions.AddIcons(Android.Widget.TextView[])">
            <summary>
            Replace "{}" tags in the given text views with actual icons, requesting the IconFontDescriptors
            one after the others.
            <strong>This is a one time call.</strong> If you call <see cref="M:Android.Widget.TextView.SetText(System.String,Android.Widget.TextView.BufferType)" /> after this,
            you'll need to call it again.
            </summary>
            <param name="textViews">The text views.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.IconizeExtensions.Compute(Android.Views.View,Android.Content.Context,Java.Lang.ICharSequence,System.Single)">
            <summary>
            Computes the specified context.
            </summary>
            <param name="target">The target.</param>
            <param name="context">The context.</param>
            <param name="text">The text.</param>
            <param name="size">The font size.</param>
            <returns></returns>
        </member>
        <member name="M:Plugin.Iconize.Droid.IconizeExtensions.Compute(Java.Lang.ICharSequence,Android.Content.Context,System.Single)">
            <summary>
            Computes the specified context.
            </summary>
            <param name="text">The text.</param>
            <param name="context">The context.</param>
            <param name="size">The font size.</param>
            <returns></returns>
        </member>
        <member name="M:Plugin.Iconize.Droid.IconizeExtensions.ToTypeface(Plugin.Iconize.IIconModule,Android.Content.Context)">
            <summary>
            To the typeface.
            </summary>
            <param name="module">The module.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Plugin.Iconize.Droid.CustomTypefaceSpan">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.Droid.CustomTypefaceSpan" /> span.
            </summary>
            <seealso cref="T:Android.Text.Style.ReplacementSpan" />
        </member>
        <member name="P:Plugin.Iconize.Droid.CustomTypefaceSpan.IsAnimated">
            <summary>
            Gets a value indicating whether this instance is animated.
            </summary>
            <value>
            <c>true</c> if this instance is animated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Plugin.Iconize.Droid.CustomTypefaceSpan.#ctor(Plugin.Iconize.IIcon,Android.Graphics.Typeface,System.Single,System.Single,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Droid.CustomTypefaceSpan" /> class.
            </summary>
            <param name="icon">The icon.</param>
            <param name="type">The type.</param>
            <param name="iconSizePx">The icon size px.</param>
            <param name="iconSizeRatio">The icon size ratio.</param>
            <param name="iconColor">Color of the icon.</param>
            <param name="rotate">if set to <c>true</c> [rotate].</param>
            <param name="baselineAligned">if set to <c>true</c> [baseline aligned].</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.CustomTypefaceSpan.Draw(Android.Graphics.Canvas,Java.Lang.ICharSequence,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,Android.Graphics.Paint)">
            <summary>
            </summary>
            <param name="canvas">To be added.</param>
            <param name="text">To be added.</param>
            <param name="start">To be added.</param>
            <param name="end">To be added.</param>
            <param name="x">To be added.</param>
            <param name="top">To be added.</param>
            <param name="y">To be added.</param>
            <param name="bottom">To be added.</param>
            <param name="paint">To be added.</param>
            <remarks>
            <para tool="javadoc-to-mdoc" />
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/text/style/ReplacementSpan.html#draw(android.graphics.Canvas, java.lang.CharSequence, int, int, float, int, int, int, android.graphics.Paint)" target="_blank">[Android Documentation]</a>
              </format>
            </para>
            </remarks>
            <since version="Added in API level 1" />
        </member>
        <member name="M:Plugin.Iconize.Droid.CustomTypefaceSpan.GetSize(Android.Graphics.Paint,Java.Lang.ICharSequence,System.Int32,System.Int32,Android.Graphics.Paint.FontMetricsInt)">
            <summary>
            Gets the size.
            </summary>
            <param name="paint">The paint.</param>
            <param name="text">The text.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="fm">The fm.</param>
            <returns></returns>
        </member>
        <member name="T:Plugin.Iconize.Droid.IHasOnViewAttachListener">
            <summary>
            Any TextView subclass that wishes to call <see cref="M:Plugin.Iconize.Droid.IconizeExtensions.AddIcons(Android.Widget.TextView[])" /> on it
            needs to implement this interface if it ever want to use spinning icons.
            IconTextView, IconButton and IconToggleButton already implement it, but if you need to implement it
            yourself, please use <see cref="T:Plugin.Iconize.Droid.HasOnViewAttachListenerDelegate" />
            to help you.
            </summary>
        </member>
        <member name="M:Plugin.Iconize.Droid.IHasOnViewAttachListener.SetOnViewAttachListener(Plugin.Iconize.Droid.IOnViewAttachListener)">
            <summary>
            Sets the on view attach listener.
            </summary>
            <param name="listener">The listener.</param>
        </member>
        <member name="T:Plugin.Iconize.Droid.IOnViewAttachListener">
            <summary>
            
            </summary>
        </member>
        <member name="M:Plugin.Iconize.Droid.IOnViewAttachListener.OnAttach">
            <summary>
            Called when [attach].
            </summary>
        </member>
        <member name="M:Plugin.Iconize.Droid.IOnViewAttachListener.OnDetach">
            <summary>
            Called when [detach].
            </summary>
        </member>
        <member name="T:Plugin.Iconize.Droid.HasOnViewAttachListenerDelegate">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.Droid.HasOnViewAttachListenerDelegate" /> delegate.
            </summary>
            <seealso cref="T:Plugin.Iconize.Droid.IHasOnViewAttachListener" />
        </member>
        <member name="M:Plugin.Iconize.Droid.HasOnViewAttachListenerDelegate.#ctor(Android.Views.View)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Droid.HasOnViewAttachListenerDelegate"/> class.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.HasOnViewAttachListenerDelegate.SetOnViewAttachListener(Plugin.Iconize.Droid.IOnViewAttachListener)">
            <summary>
            Sets the on view attach listener.
            </summary>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.HasOnViewAttachListenerDelegate.OnAttachedToWindow">
            <summary>
            Called when [attached to window].
            </summary>
        </member>
        <member name="M:Plugin.Iconize.Droid.HasOnViewAttachListenerDelegate.OnDetachedFromWindow">
            <summary>
            Called when [detached from window].
            </summary>
        </member>
        <member name="T:Plugin.Iconize.Droid.MenuClickListener">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.Droid.MenuClickListener" /> type.
            </summary>
            <seealso cref="T:Java.Lang.Object" />
            <seealso cref="T:Android.Views.IMenuItemOnMenuItemClickListener" />
            <seealso cref="T:Android.Runtime.IJavaObject" />
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Plugin.Iconize.Droid.MenuClickListener.#ctor(System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Droid.MenuClickListener"/> class.
            </summary>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.MenuClickListener.OnMenuItemClick(Android.Views.IMenuItem)">
            <summary>
            Called when a menu item has been invoked.
            </summary>
            <param name="item">The menu item that was invoked.</param>
            <returns>
            To be added.
            </returns>
            <remarks>
            <para tool="javadoc-to-mdoc">Called when a menu item has been invoked.  This is the first code
            that is executed; if it returns true, no other callbacks will be
            executed.</para>
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/android/view/MenuItem.OnMenuItemClickListener.html#onMenuItemClick(android.view.MenuItem)" target="_blank">[Android Documentation]</a>
              </format>
            </para>
            </remarks>
            <since version="Added in API level 1" />
        </member>
        <member name="T:Plugin.Iconize.Droid.ParsingUtil">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.Droid.ParsingUtil" /> type.
            </summary>
        </member>
        <member name="T:Plugin.Iconize.Droid.ParsingUtil.MyListener">
            <summary>
            Defines the <see cref="T:Plugin.Iconize.Droid.ParsingUtil.MyListener" /> type.
            </summary>
            <seealso cref="T:Java.Lang.Object" />
            <seealso cref="T:Plugin.Iconize.Droid.IOnViewAttachListener" />
            <seealso cref="T:Java.Lang.IRunnable" />
        </member>
        <member name="M:Plugin.Iconize.Droid.ParsingUtil.MyListener.#ctor(Android.Views.View)">
            <summary>
            Initializes a new instance of the <see cref="T:Plugin.Iconize.Droid.ParsingUtil.MyListener" /> class.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="M:Plugin.Iconize.Droid.ParsingUtil.MyListener.OnAttach">
            <summary>
            Called when [attach].
            </summary>
        </member>
        <member name="M:Plugin.Iconize.Droid.ParsingUtil.MyListener.OnDetach">
            <summary>
            Called when [detach].
            </summary>
        </member>
        <member name="M:Plugin.Iconize.Droid.ParsingUtil.MyListener.Run">
            <summary>
            Starts executing the active part of the class' code.
            </summary>
            <remarks>
            <para tool="javadoc-to-mdoc">Starts executing the active part of the class' code. This method is
            called when a thread is started that has been created with a class which
            implements <c>Runnable</c>.
            </para>
            <para tool="javadoc-to-mdoc">
              <format type="text/html">
                <a href="http://developer.android.com/reference/java/lang/Runnable.html#run()" target="_blank">[Android Documentation]</a>
              </format>
            </para>
            </remarks>
            <since version="Added in API level 1" />
        </member>
        <member name="M:Plugin.Iconize.Droid.ParsingUtil.Parse(Android.Content.Context,System.Collections.Generic.IList{Plugin.Iconize.IIconModule},Java.Lang.ICharSequence,System.Single,Android.Views.View)">
            <summary>
            Parses the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="modules">The modules.</param>
            <param name="text">The text.</param>
            <param name="size">The size.</param>
            <param name="target">The target.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">
            You can't use \spin\ without providing the target View.
            or
            </exception>
        </member>
        <member name="M:Plugin.Iconize.Droid.ParsingUtil.HasAnimatedSpans(Android.Text.SpannableStringBuilder)">
            <summary>
            Determines whether [has animated spans] [the specified spannable builder].
            </summary>
            <param name="spannableBuilder">The spannable builder.</param>
            <returns></returns>
        </member>
        <member name="M:Plugin.Iconize.Droid.ParsingUtil.RecursivePrepareSpannableIndexes(Android.Content.Context,System.String,System.Single,Android.Text.SpannableStringBuilder,System.Collections.Generic.IList{Plugin.Iconize.IIconModule},System.Int32)">
            <summary>
            Recursives the prepare spannable indexes.
            </summary>
            <param name="context">The context.</param>
            <param name="text">The text.</param>
            <param name="size">The size.</param>
            <param name="builder">The builder.</param>
            <param name="modules">The modules.</param>
            <param name="start">The start.</param>
            <exception cref="T:System.ArgumentException">
            Unknown resource  + stroke +  in \ + text + \
            or
            Unknown resource  + stroke +  in \ + text + \
            or
            Unknown resource  + stroke +  in \ + text + \
            or
            Unknown resource  + stroke +  in \ + text + \
            or
            Unknown expression  + stroke +  in \ + text + \
            </exception>
        </member>
        <member name="M:Plugin.Iconize.Droid.ParsingUtil.GetPxFromDimen(Android.Content.Context,System.String,System.String)">
            <summary>
            Gets the px from dimen.
            </summary>
            <param name="context">The context.</param>
            <param name="packageName">Name of the package.</param>
            <param name="resName">Name of the resource.</param>
            <returns></returns>
        </member>
        <member name="M:Plugin.Iconize.Droid.ParsingUtil.GetColorFromResource(Android.Content.Context,System.String,System.String)">
            <summary>
            Gets the color from resource.
            </summary>
            <param name="context">The context.</param>
            <param name="packageName">Name of the package.</param>
            <param name="resName">Name of the resource.</param>
            <returns></returns>
        </member>
        <member name="M:Plugin.Iconize.Droid.ParsingUtil.dpToPx(Android.Content.Context,System.Single)">
            <summary>
            Dps to px.
            </summary>
            <param name="context">The context.</param>
            <param name="dp">The dp.</param>
            <returns></returns>
        </member>
        <member name="M:Plugin.Iconize.Droid.ParsingUtil.spToPx(Android.Content.Context,System.Single)">
            <summary>
            Sps to px.
            </summary>
            <param name="context">The context.</param>
            <param name="sp">The sp.</param>
            <returns></returns>
        </member>
    </members>
</doc>
